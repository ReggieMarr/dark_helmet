* [2020-08-12 Wed 14:00] grasp/org_tools.py at af24c991579986cec73695daa8318e7831049305 · karlicoss/grasp :grasp:
https://github.com/karlicoss/grasp/blob/af24c991579986cec73695daa8318e7831049305/server/org_tools.py#L91-L109
Comment:
This capture
* [2020-08-12 Wed 14:51] kzar/davemail: My email configuration, using mbsync, notmuch, msmtp, msmtpq, pgp, emacs and gnus-alias :grasp:email:notmuch:emacs:
https://github.com/kzar/davemail
Comment:
example on setting up notmuch email
* [2020-08-12 Wed 14:52] Notmuch in Emacs with mbsync and msmtp · she will never swims alone :grasp:email:emacs:
https://www.ying-ish.com/essay/emacs-notmuch-mbsync-msmtp-email/
Comment:
setup emacs with email with notmuch and msmtp
* [2020-08-12 Wed 15:11] Extracting PDF highlights and linking back to PDF in org-mode : emacs :grasp:pdf:org-mode:org-capture:emacs:
https://www.reddit.com/r/emacs/comments/7yxg1t/extracting_pdf_highlights_and_linking_back_to_pdf/
Comment:
ways to capture pdfs in org notes
* [2020-08-12 Wed 23:11] Configuring Doom emacs, mbsync, and mu4e for use with o365 • Unl0ckd :grasp:email:mbsync:mu4e:
https://www.chrislockard.net/posts/2019-11-14-notes-on-configuring-mu4e-and-doom-emacs/
Comment:
doom emacs unlocked email setup
* [2020-08-12 Wed 23:13] tuhdo/semantic-refactor: Semantic Refactor is a refactoring tool based on Semantic parser framework :grasp:emacs:function:prototype:
https://github.com/tuhdo/semantic-refactor
Comment:
semantic refact
* [2020-08-12 Wed 23:27] What is Open Collector Output? :grasp:basic:electronics:
http://www.learningaboutelectronics.com/Articles/Open-collector-output.php
Selection:
An open collector output refers to an output that is connected to the collector of a transistor.

Basically, just think of a transistor. A BJT transistor has a base, a collector, and an emitter.

An open collector output is an output device that is attached to an open collector of a transistor.

By open collector, we mean a collector that is unattached to anything. It's just open.

In order for an open collector output device to work, the open collector has to receive sufficient power.

In order to understand this, you have to understand NPN transistors. In order for an NPN transistor to work, the base and the collector both need sufficient power. The base turns the transistor on. And then a much greater current flows from collector to emitter, but only if the collector has sufficient positive voltage.

A perfect example of an open collector output are voltage comparators. Pretty much all voltage comparator chips, such as the LM311, the LM393, and the LM339 all function as output collector outputs.

Below is shown the internal diagram or makeup of the LM311 voltage comparator chip. 
Comment:
open collector defitions
* [2020-08-13 Thu 10:57] Zettelkasten/Org-roam/Org-brain Is Crap : emacs :grasp:zettlekasten:emacs:org-roam:
https://www.reddit.com/r/emacs/comments/hg2m5s/zettelkastenorgroamorgbrain_is_crap/
Comment:
this is interesting since it appears to give lots of tips on the shortcomings of the zettelkasten method/org-roam system. The people who comment show where to maxmize its effectiveness.
* [2020-08-13 Thu 11:29] Using Emacs 44 - An Org mode and PDF-tools workflow - YouTube :grasp:emacs:pdf-tools:org-mode:
https://www.youtube.com/watch?v=LFO2UbzbZhA
Comment:
skip the first 8 or so minutes on this but then its interesting.
Firstly the macro he uses to turn the pdfs into org note references is interesting. Secondly it really displays the power of mixing dired, org-mode, and pdf tools
* [2020-08-13 Thu 13:40] Org-capture in Files · The Art of Not Asking Why :grasp:emacs:org-mode:org-capture:
https://joshrollinswrites.com/help-desk-head-desk/org-capture-in-files/
Comment:
capturing files templates
* [2020-08-14 Fri 11:34] The Magical container_of() Macro (by @radekpazdera) :grasp:programming:container:of:C:
https://radek.io/2012/11/10/magical-container_of-macro/
Comment:
link that sean sent wrt the container of macro
* [2020-08-14 Fri 11:34] braindump(ag) == Magic in the container_of() linux kernel macro :grasp:programming:container:of:
https://andrei.gherzan.ro/linux/the-magic-in-container-of/
Comment:
container of in the context of the linux kernel
recent post (2019-11-22)
* [2020-08-14 Fri 17:51] emacs - Inline PDF images in org-mode - Stack Overflow :emacs:org-mode:pdf:
https://stackoverflow.com/questions/15407485/inline-pdf-images-in-org-mode
Selection:
Let me finish this question.

Firstly, Org-mode does not support any pdf inline display function with itself. However, it is possible to modify org-display-inline-images to achieve what you want. First you need to refer to this answer: Configuring emacs for showing fixed width inline images, which inspired me a lot. Then I slightly modified the function, making it support pdf, bmp display in org-mode. My function is on below.

#+BEGIN_SRC emacs-lisp
(setq image-file-name-extensions
   (quote
    ("png" "jpeg" "jpg" "gif" "tiff" "tif" "xbm" "xpm" "pbm" "pgm" "ppm" "pnm" "svg" "pdf" "bmp")))

(setq org-image-actual-width 600)

(setq org-imagemagick-display-command "convert -density 600 \"%s\" -thumbnail \"%sx%s>\" \"%s\"")
(defun org-display-inline-images (&optional include-linked refresh beg end)
  "Display inline images.
Normally only links without a description part are inlined, because this
is how it will work for export.  When INCLUDE-LINKED is set, also links
with a description part will be inlined.  This
can be nice for a quick
look at those images, but it does not reflect what exported files will look
like.
When REFRESH is set, refresh existing images between BEG and END.
This will create new image displays only if necessary.
BEG and END default to the buffer boundaries."
  (interactive "P")
  (unless refresh
    (org-remove-inline-images)
    (if (fboundp 'clear-image-cache) (clear-image-cache)))
  (save-excursion
    (save-restriction
      (widen)
      (setq beg (or beg (point-min)) end (or end (point-max)))
      (goto-char beg)
      (let ((re (concat "\\[\\[\\(\\(file:\\)\\|\\([./~]\\)\\)\\([^]\n]+?"
                        (substring (org-image-file-name-regexp) 0 -2)
                        "\\)\\]" (if include-linked "" "\\]")))
            old file ov img)
        (while (re-search-forward re end t)
          (setq old (get-char-property-and-overlay (match-beginning 1)
                                                   'org-image-overlay)
        file (expand-file-name
                      (concat (or (match-string 3) "") (match-string 4))))
          (when (file-exists-p file)
            (let ((file-thumb (format "%s%s_thumb.png" (file-name-directory file) (file-name-base file))))
              (if (file-exists-p file-thumb)
                  (let ((thumb-time (nth 5 (file-attributes file-thumb 'string)))
                        (file-time (nth 5 (file-attributes file 'string))))
                    (if (time-less-p thumb-time file-time)
            (shell-command (format org-imagemagick-display-command
                           file org-image-actual-width org-image-actual-width file-thumb) nil nil)))
                (shell-command (format org-imagemagick-display-command
                                         file org-image-actual-width org-image-actual-width file-thumb) nil nil))
              (if (and (car-safe old) refresh)
                  (image-refresh (overlay-get (cdr old) 'display))
                (setq img (save-match-data (create-image file-thumb)))
                (when img
                  (setq ov (make-overlay (match-beginning 0) (match-end 0)))
                  (overlay-put ov 'display img)
                  (overlay-put ov 'face 'default)
                  (overlay-put ov 'org-image-overlay t)
                  (overlay-put ov 'modification-hooks
                               (list 'org-display-inline-remove-overlay))
                  (push ov org-inline-image-overlays))))))))))

#+END_SRC
The function uses convert file.pdf -thumbnail "400x400>" file_thumb.png to generate a file_thumb named thumbnail in your folder to substitute overlay of pdf, and force org-mode to display pdf with file_thumb without any modification to the org file.

Moreover, because i use babel to generate image with python. It always need me to update the _thumb file, so I add a if condition to say if this thumb file existed or not, and if the pdf file changed i need to change thumb file on the same time... and so on!

Hope it can help you.
Comment:
This shows how to create a thumbnail from a pdf and use it inline in a org file
* [2020-08-16 Sun 23:12] fuxialexander/org-pdftools: A custom org link type for pdf-tools :grasp:emacs:org-mode:pdf:
https://github.com/fuxialexander/org-pdftools
Comment:
Crazy extension to pdf tools
* [2020-08-16 Sun 23:18] org-pdftools & org-noter demo - YouTube :grasp:org-mode:emacs:org-capture:pdf:
https://www.youtube.com/watch?v=lCc3UoQku-E
Comment:
showing off how to use pdftools and org noter around halfway he shows how to create links from the current page. this could be useful for creating captures.
